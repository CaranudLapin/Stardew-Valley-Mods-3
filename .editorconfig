[*.cs]

# use 'this.' qualifier
# disabled for now
# dotnet_style_qualification_for_field = true:error
# dotnet_style_qualification_for_property = true:error
# dotnet_style_qualification_for_method = true:error
# dotnet_style_qualification_for_event = true:error

# use language keywords (like int) instead of type (like Int32)
dotnet_style_predefined_type_for_locals_parameters_members = true:error
dotnet_style_predefined_type_for_member_access = true:error

# suggest modern C# features where simpler
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion
csharp_prefer_simple_default_expression = true:suggestion

# apply .NET naming conventions - public types
dotnet_naming_symbols.public_symbols.applicable_kinds = namespace, class, struct, interface, enum, property, method, field, event, delegate, type_parameter, local_function
dotnet_naming_symbols.public_symbols.applicable_accessibilities = public, protected, internal
dotnet_naming_style.first_word_upper_case_style.capitalization = first_word_upper
dotnet_naming_rule.public_members_must_be_capitalized.symbols = public_symbols
dotnet_naming_rule.public_members_must_be_capitalized.style = first_word_upper_case_style
dotnet_naming_rule.public_members_must_be_capitalized.severity = warning

# warn/error overrides
dotnet_diagnostic.CA1806.severity = error
dotnet_code_quality.CA1822.api_surface = private, internal
dotnet_style_prefer_inferred_tuple_names = false
dotnet_diagnostic.IDE0005.severity = warning